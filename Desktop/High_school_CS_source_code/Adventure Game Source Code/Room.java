/** * Class Room - a room in an adventure game. * * Author:  Michael Kolling * Version: 1.1 * Date:    August 2000 * * "Room" represents one location in the scenery of the game.  It is  * connected to at most four other rooms via exits.  The exits are labelled * north, east, south, west, up and dow.  For each direction, the room stores a reference * to the neighbouring room, or null if there is no exit in that direction. */class Room {    String description;    private Room north, south, east, west, up, down;    public Room currentRoom;    public Room enemyRoom;    String enemyString;    Room outside, TV_van,behind_TV_van,lower_circle_N,lower_stands_N,lower_circle_S, lower_stands_S,ring, stairs_0,stairs_1,stairs_2, Back,secret1,roof, basement;    /**     * Create a room described "description". Initially, it has no exits.     * "description" is something like "a kitchen" or "an open court yard".     */    public Room(String description)     {        this.description = description;    }    /**     * Define the exits of this room.  Every direction either leads to     * another room or is null (no exit there). Also defines the (x,y,z)     * coordinates of each room.     */    public void setExits(Room theNorth, Room theEast, Room theSouth, Room theWest, Room theUp, Room theDown)     {        north = theNorth;        east = theEast;        south = theSouth;        west = theWest;        up = theUp;        down = theDown;    }    /**     * Return the description of the room (the one that was defined in the     * constructor).     */    public String shortDescription()    {        return description;    }    /**     * Return a long description of this room, on the form:     *     You are in the kitchen.     *     Exits: north west     */    public String longDescription()    {        return "You are " + description + ".\n" + exitString();    }    /**     * Return a string describing the room's exits, for example     * "Exits: north west ".     */    private String exitString()    {        String returnString = "Exits:";        if (north != null)            returnString += " north";        if (east != null)            returnString += " east";        if (south != null)            returnString += " south";        if (west != null)            returnString += " west";        if (up != null)            returnString += " up";        if (down != null)            returnString += " down";        return returnString;    }    /**     * Return the room that is reached if we go from this room in direction     * "direction". If there is no room in that direction, return null.     */    public Room nextRoom(String direction)     {        if (direction.equals("north"))            return north;        else if (direction.equals("east"))            return east;        else if (direction.equals("south"))            return south;        else if (direction.equals("west"))            return west;        else if (direction.equals("up"))            return up;        else if (direction.equals("down"))            return down;        else            return null;    }}